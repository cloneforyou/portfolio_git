{"ast":null,"code":"import _slicedToArray from \"/Users/dor_p/morning/morning_drill/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/dor_p/morning/morning_drill/src/index.js\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { timeout } from \"q\";\n\nfunction Success(props) {\n  let spans = [];\n  const numSpans = 30;\n\n  for (var i = 0; i < numSpans; i++) {\n    spans.push(React.createElement(\"span\", {\n      className: 'single-success ' + props.runAmin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, props.emoji));\n  }\n\n  return React.createElement(\"div\", {\n    className: 'success ' + props.class,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"success-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, spans));\n}\n\nfunction Toggle(props) {\n  const _useState = useState(props.onOff),\n        _useState2 = _slicedToArray(_useState, 2),\n        switchState = _useState2[0],\n        setSwitchState = _useState2[1];\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"switch-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"switch switch-\" + switchState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"circle \" + switchState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: switchState + ' noselect',\n    onClick: () => {\n      if (switchState === \"on\") {\n        setSwitchState(\"off\");\n        props.sendSwitchState(props.switchId, 'off');\n      } else {\n        setSwitchState(\"on\");\n        props.sendSwitchState(props.switchId, 'on');\n        props.showAnim(props.switchId);\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, props.emoji)))));\n}\n\nfunction Sun(props) {\n  return React.createElement(\"div\", {\n    className: \"sun\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }));\n}\n\nfunction List(props) {\n  const items = [\"ðŸ’©\", \"ðŸ‘–\", \"ðŸ‘•\", \"ðŸ˜¬\", \"test\"];\n\n  const _useState3 = useState(Array(items.length).fill('off')),\n        _useState4 = _slicedToArray(_useState3, 2),\n        switchsState = _useState4[0],\n        setSwitchState = _useState4[1];\n\n  const _useState5 = useState(['off', null]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        successOnOff = _useState6[0],\n        setSuccessOnOff = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        runAmin = _useState8[0],\n        setRunAnim = _useState8[1]; // Setting the background acourding to the switches\n\n\n  const ons = switchsState.map(x => x == 'on');\n  const background = (ons.filter(Boolean).length / items.length * 100).toFixed(1);\n  const bgStyle = {\n    'background-image': 'linear-gradient(135deg, #5bb0ff 0%, #0070fb ' + background + '%)'\n  }; // pass the value from the switch to the list\n\n  const sendSwitchState = (i, val) => {\n    const switchs = switchsState.slice();\n    switchs[i] = val;\n    setSwitchState(switchs); // Turns on and off the success icons container\n  };\n\n  const showAnim = i => {\n    setSuccessOnOff(['on', items[i]]);\n    setRunAnim('run-anim');\n    setTimeout(() => {\n      setSuccessOnOff(['off', items[i]]);\n      setRunAnim('');\n    }, 3000);\n  };\n\n  console.log(successOnOff[1]);\n  return React.createElement(\"div\", {\n    className: \"list-container\",\n    style: bgStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Success, {\n    class: 'success-' + successOnOff[0],\n    emoji: successOnOff[1],\n    runAmin: runAmin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), items.map((item, i) => React.createElement(Toggle, {\n    emoji: item,\n    onOff: switchsState[i],\n    sendSwitchState: sendSwitchState,\n    switchId: i,\n    showAnim: showAnim,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  })), React.createElement(Sun, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  })));\n}\n\nfunction App(props) {\n  return React.createElement(\"div\", {\n    className: \"app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }));\n}\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 118\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/dor_p/morning/morning_drill/src/index.js"],"names":["React","useState","ReactDOM","timeout","Success","props","spans","numSpans","i","push","runAmin","emoji","class","Toggle","onOff","switchState","setSwitchState","sendSwitchState","switchId","showAnim","Sun","List","items","Array","length","fill","switchsState","successOnOff","setSuccessOnOff","setRunAnim","ons","map","x","background","filter","Boolean","toFixed","bgStyle","val","switchs","slice","setTimeout","console","log","item","App","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { timeout } from \"q\";\n\nfunction Success(props) {\n\n  let spans = []\n  const numSpans = 30;\n\n  for (var i = 0; i < numSpans; i++) {\n    spans.push(<span className={'single-success ' + props.runAmin}>{props.emoji}</span>);\n  }\n\n  return(\n    <div className = {'success ' + props.class}>\n      <div className = 'success-wrapper'>\n          {spans}\n      </div>\n    </div>\n  )\n}\n\nfunction Toggle(props) {\n\n  const [switchState, setSwitchState] = useState(props.onOff)\n  \n  return (\n    <div>\n      <div className=\"switch-wrapper\">\n        <div className={\"switch switch-\" + switchState}>\n          <div className={\"circle \" + switchState}>\n            <button\n              className={switchState + ' noselect'}\n              onClick={() => {\n                if (switchState === \"on\") {\n                  setSwitchState(\"off\");\n                  props.sendSwitchState(props.switchId, 'off')\n                }\n                else {\n                  setSwitchState(\"on\");\n                  props.sendSwitchState(props.switchId, 'on')\n                  props.showAnim(props.switchId)\n                }\n              }}\n            >\n              {props.emoji}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction Sun(props){\n  return (\n    <div className='sun'>\n      <div className='small'></div>\n    </div>\n  )\n}\n\nfunction List(props) {\n\n  const items = [\"ðŸ’©\", \"ðŸ‘–\", \"ðŸ‘•\", \"ðŸ˜¬\",\"test\"];\n\n  const [switchsState, setSwitchState] = useState(Array(items.length).fill('off'))\n  const [successOnOff, setSuccessOnOff] = useState(['off',null]);\n  const [runAmin, setRunAnim] = useState('') \n\n// Setting the background acourding to the switches\n  const ons = switchsState.map(x =>(x == 'on'))\n  const background = (ons.filter(Boolean).length/items.length*100).toFixed(1)\n  const bgStyle = {\n    'background-image' : 'linear-gradient(135deg, #5bb0ff 0%, #0070fb ' + background +'%)'  \n  }\n\n// pass the value from the switch to the list\n  const sendSwitchState = (i,val) => {\n    const switchs = switchsState.slice();\n    switchs[i] = val;\n    setSwitchState(switchs)\n    // Turns on and off the success icons container\n  }\n\n  const showAnim = (i) => {\n    setSuccessOnOff(['on',items[i]])\n    setRunAnim('run-anim')\n    setTimeout(() => {\n      setSuccessOnOff(['off',items[i]])\n      setRunAnim('')\n    }, 3000);\n  }\n\n  console.log(successOnOff[1])\n\n  return (\n    <div className='list-container' style ={bgStyle}>\n      <div className=\"list\" >\n        <Success class={'success-' + successOnOff[0]} emoji={successOnOff[1]} runAmin={runAmin}/>\n        {items.map((item,i) => (\n          <Toggle emoji={item} onOff ={switchsState[i]} sendSwitchState={sendSwitchState} switchId = {i} showAnim = {showAnim}/>\n        ))}\n        <Sun />\n      </div>\n    </div>\n  );\n}\n\nfunction App(props) {\n  return (\n    <div className=\"app\">\n      <List />\n    </div>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}