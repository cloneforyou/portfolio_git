{"ast":null,"code":"import _slicedToArray from \"/Users/dor_p/morning/morning_drill/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/dor_p/morning/morning_drill/src/index.js\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { timeout } from \"q\";\n\nfunction Success(props) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        start = _useState2[0],\n        setStart = _useState2[1];\n\n  let spans = [];\n  const numSpans = 30;\n\n  for (var i = 0; i < numSpans; i++) {\n    setTimeout(function () {\n      setStart('start');\n    }, 10000);\n    spans.push(React.createElement(\"span\", {\n      className: 'single-success ' + start,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, props.emoji));\n  }\n\n  return React.createElement(\"div\", {\n    className: 'success ' + props.class,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"success-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, spans));\n}\n\nfunction Toggle(props) {\n  const _useState3 = useState(props.onOff),\n        _useState4 = _slicedToArray(_useState3, 2),\n        switchState = _useState4[0],\n        setSwitchState = _useState4[1];\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"switch-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"switch switch-\" + switchState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"circle \" + switchState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: switchState + ' noselect',\n    onClick: () => {\n      if (switchState === \"on\") {\n        setSwitchState(\"off\");\n        props.modify(props.switchId, 'off');\n      } else {\n        setSwitchState(\"on\");\n        props.modify(props.switchId, 'on');\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, props.emoji)))));\n}\n\nfunction Sun(props) {\n  return React.createElement(\"div\", {\n    className: \"sun\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }));\n}\n\nfunction List(props) {\n  const items = [\"ðŸ’©\", \"ðŸ‘–\", \"ðŸ‘•\", \"ðŸ˜¬\", \"test\"];\n\n  const _useState5 = useState(Array(items.length).fill('off')),\n        _useState6 = _slicedToArray(_useState5, 2),\n        switchsState = _useState6[0],\n        setSwitchState = _useState6[1]; // Setting the background acourding to the switches\n\n\n  const ons = switchsState.map(x => x == 'on');\n  const background = (ons.filter(Boolean).length / items.length * 100).toFixed(1);\n  const bgStyle = {\n    'background-image': 'linear-gradient(135deg, #5bb0ff 0%, #0070fb ' + background + '%)'\n  };\n\n  const _useState7 = useState(['off', 'ðŸ›³']),\n        _useState8 = _slicedToArray(_useState7, 2),\n        successOnOff = _useState8[0],\n        setSuccessOnOff = _useState8[1]; // pass the value from the switch to the list\n\n\n  const modify = (i, val) => {\n    const switchs = switchsState.slice();\n    switchs[i] = val;\n    setSwitchState(switchs); // Set the success animation and then turn it off\n\n    setSuccessOnOff([val, items[i]]);\n    setTimeout(function () {\n      setSuccessOnOff(['off', items[i]]);\n    }, 3000);\n    console.log(successOnOff);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"list-container\",\n    style: bgStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Success, {\n    class: 'success-' + successOnOff[0],\n    emoji: successOnOff[1],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), items.map((item, i) => React.createElement(Toggle, {\n    emoji: item,\n    onOff: switchsState[i],\n    modify: modify,\n    switchId: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })), React.createElement(Sun, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  })));\n}\n\nfunction App(props) {\n  return React.createElement(\"div\", {\n    className: \"app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }));\n}\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 116\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/dor_p/morning/morning_drill/src/index.js"],"names":["React","useState","ReactDOM","timeout","Success","props","start","setStart","spans","numSpans","i","setTimeout","push","emoji","class","Toggle","onOff","switchState","setSwitchState","modify","switchId","Sun","List","items","Array","length","fill","switchsState","ons","map","x","background","filter","Boolean","toFixed","bgStyle","successOnOff","setSuccessOnOff","val","switchs","slice","console","log","item","App","render","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,OAAT,QAAwB,GAAxB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA,oBACIJ,QAAQ,CAAC,EAAD,CADZ;AAAA;AAAA,QACfK,KADe;AAAA,QACRC,QADQ;;AAEtB,MAAIC,KAAK,GAAG,EAAZ;AACA,QAAMC,QAAQ,GAAG,EAAjB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,QAApB,EAA8BC,CAAC,EAA/B,EAAmC;AACjCC,IAAAA,UAAU,CAAC,YAAU;AACnBJ,MAAAA,QAAQ,CAAC,OAAD,CAAR;AACD,KAFS,EAEP,KAFO,CAAV;AAGAC,IAAAA,KAAK,CAACI,IAAN,CAAW;AAAM,MAAA,SAAS,EAAE,oBAAoBN,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6CD,KAAK,CAACQ,KAAnD,CAAX;AACD;;AAED,SACE;AAAK,IAAA,SAAS,EAAI,aAAaR,KAAK,CAACS,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAG,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,KADL,CADF,CADF;AAOD;;AAED,SAASO,MAAT,CAAgBV,KAAhB,EAAuB;AAAA,qBAEiBJ,QAAQ,CAACI,KAAK,CAACW,KAAP,CAFzB;AAAA;AAAA,QAEdC,WAFc;AAAA,QAEDC,cAFC;;AAIrB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAE,mBAAmBD,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAE,YAAYA,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAEA,WAAW,GAAG,WAD3B;AAEE,IAAA,OAAO,EAAE,MAAM;AACb,UAAIA,WAAW,KAAK,IAApB,EAA0B;AACxBC,QAAAA,cAAc,CAAC,KAAD,CAAd;AACAb,QAAAA,KAAK,CAACc,MAAN,CAAad,KAAK,CAACe,QAAnB,EAA6B,KAA7B;AACD,OAHD,MAIK;AACHF,QAAAA,cAAc,CAAC,IAAD,CAAd;AACAb,QAAAA,KAAK,CAACc,MAAN,CAAad,KAAK,CAACe,QAAnB,EAA6B,IAA7B;AACD;AACF,KAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaGf,KAAK,CAACQ,KAbT,CADF,CADF,CADF,CADF,CADF;AAyBD;;AAED,SAASQ,GAAT,CAAahB,KAAb,EAAmB;AACjB,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD;;AAED,SAASiB,IAAT,CAAcjB,KAAd,EAAqB;AAEnB,QAAMkB,KAAK,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAwB,MAAxB,CAAd;;AAFmB,qBAIoBtB,QAAQ,CAACuB,KAAK,CAACD,KAAK,CAACE,MAAP,CAAL,CAAoBC,IAApB,CAAyB,KAAzB,CAAD,CAJ5B;AAAA;AAAA,QAIZC,YAJY;AAAA,QAIET,cAJF,kBAMrB;;;AACE,QAAMU,GAAG,GAAGD,YAAY,CAACE,GAAb,CAAiBC,CAAC,IAAIA,CAAC,IAAI,IAA3B,CAAZ;AACA,QAAMC,UAAU,GAAG,CAACH,GAAG,CAACI,MAAJ,CAAWC,OAAX,EAAoBR,MAApB,GAA2BF,KAAK,CAACE,MAAjC,GAAwC,GAAzC,EAA8CS,OAA9C,CAAsD,CAAtD,CAAnB;AACA,QAAMC,OAAO,GAAG;AACd,wBAAqB,iDAAiDJ,UAAjD,GAA6D;AADpE,GAAhB;;AATmB,qBAaqB9B,QAAQ,CAAC,CAAC,KAAD,EAAO,IAAP,CAAD,CAb7B;AAAA;AAAA,QAaZmC,YAbY;AAAA,QAaEC,eAbF,kBAerB;;;AACE,QAAMlB,MAAM,GAAG,CAACT,CAAD,EAAG4B,GAAH,KAAW;AACxB,UAAMC,OAAO,GAAGZ,YAAY,CAACa,KAAb,EAAhB;AACAD,IAAAA,OAAO,CAAC7B,CAAD,CAAP,GAAa4B,GAAb;AACApB,IAAAA,cAAc,CAACqB,OAAD,CAAd,CAHwB,CAIxB;;AACAF,IAAAA,eAAe,CAAC,CAACC,GAAD,EAAKf,KAAK,CAACb,CAAD,CAAV,CAAD,CAAf;AACAC,IAAAA,UAAU,CAAC,YAAU;AACnB0B,MAAAA,eAAe,CAAC,CAAC,KAAD,EAAOd,KAAK,CAACb,CAAD,CAAZ,CAAD,CAAf;AACD,KAFS,EAER,IAFQ,CAAV;AAKA+B,IAAAA,OAAO,CAACC,GAAR,CAAYN,YAAZ;AACD,GAZD;;AAcA,SACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAgC,IAAA,KAAK,EAAGD,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAE,aAAaC,YAAY,CAAC,CAAD,CAAzC;AAA8C,IAAA,KAAK,EAAEA,YAAY,CAAC,CAAD,CAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGb,KAAK,CAACM,GAAN,CAAU,CAACc,IAAD,EAAMjC,CAAN,KACT,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEiC,IAAf;AAAqB,IAAA,KAAK,EAAGhB,YAAY,CAACjB,CAAD,CAAzC;AAA8C,IAAA,MAAM,EAAES,MAAtD;AAA8D,IAAA,QAAQ,EAAIT,CAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAFH,EAKE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,CADF;AAWD;;AAED,SAASkC,GAAT,CAAavC,KAAb,EAAoB;AAClB,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD;;AAEDH,QAAQ,CAAC2C,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { timeout } from \"q\";\n\nfunction Success(props) {\n  const [start, setStart] = useState('')\n  let spans = []\n  const numSpans = 30;\n\n  for (var i = 0; i < numSpans; i++) {\n    setTimeout(function(){\n      setStart('start')\n    }, 10000)\n    spans.push(<span className={'single-success ' + start}>{props.emoji}</span>);\n  }\n\n  return(\n    <div className = {'success ' + props.class}>\n      <div className = 'success-wrapper'>\n          {spans}\n      </div>\n    </div>\n  )\n}\n\nfunction Toggle(props) {\n\n  const [switchState, setSwitchState] = useState(props.onOff)\n  \n  return (\n    <div>\n      <div className=\"switch-wrapper\">\n        <div className={\"switch switch-\" + switchState}>\n          <div className={\"circle \" + switchState}>\n            <button\n              className={switchState + ' noselect'}\n              onClick={() => {\n                if (switchState === \"on\") {\n                  setSwitchState(\"off\");\n                  props.modify(props.switchId, 'off')\n                }\n                else {\n                  setSwitchState(\"on\");\n                  props.modify(props.switchId, 'on')\n                }\n              }}\n            >\n              {props.emoji}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction Sun(props){\n  return (\n    <div className='sun'>\n      <div className='small'></div>\n    </div>\n  )\n}\n\nfunction List(props) {\n\n  const items = [\"ðŸ’©\", \"ðŸ‘–\", \"ðŸ‘•\", \"ðŸ˜¬\",\"test\"];\n\n  const [switchsState, setSwitchState] = useState(Array(items.length).fill('off'))\n\n// Setting the background acourding to the switches\n  const ons = switchsState.map(x =>(x == 'on'))\n  const background = (ons.filter(Boolean).length/items.length*100).toFixed(1)\n  const bgStyle = {\n    'background-image' : 'linear-gradient(135deg, #5bb0ff 0%, #0070fb ' + background +'%)'  \n  }\n\n  const [successOnOff, setSuccessOnOff] = useState(['off','ðŸ›³']);\n\n// pass the value from the switch to the list\n  const modify = (i,val) => {\n    const switchs = switchsState.slice();\n    switchs[i] = val;\n    setSwitchState(switchs)\n    // Set the success animation and then turn it off\n    setSuccessOnOff([val,items[i]])\n    setTimeout(function(){\n      setSuccessOnOff(['off',items[i]])\n    },3000);\n\n    \n    console.log(successOnOff)\n  }\n\n  return (\n    <div className='list-container' style ={bgStyle}>\n      <div className=\"list\" >\n        <Success class={'success-' + successOnOff[0]} emoji={successOnOff[1]}/>\n        {items.map((item,i) => (\n          <Toggle emoji={item} onOff ={switchsState[i]} modify={modify} switchId = {i}/>\n        ))}\n        <Sun />\n      </div>\n    </div>\n  );\n}\n\nfunction App(props) {\n  return (\n    <div className=\"app\">\n      <List />\n    </div>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}