{"ast":null,"code":"import _slicedToArray from \"/Users/dor_p/morning/morning_drill/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/dor_p/morning/morning_drill/src/index.js\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { timeout } from \"q\";\n\nfunction Success(props) {\n  let spans = [];\n  const numSpans = 10;\n  console.log(props.emoji);\n\n  for (var i = 0; i < numSpans; i++) {\n    spans.push(React.createElement(\"span\", {\n      className: 'single-success ' + 'anim-num-' + i + ' ' + props.runAmin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, props.emoji));\n  }\n\n  return React.createElement(\"div\", {\n    className: 'success ' + props.class,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"success-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, spans));\n}\n\nfunction Toggle(props) {\n  const _useState = useState(props.onOff),\n        _useState2 = _slicedToArray(_useState, 2),\n        switchState = _useState2[0],\n        setSwitchState = _useState2[1];\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"switch-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"switch switch-\" + switchState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"circle \" + switchState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: switchState + ' noselect',\n    onClick: () => {\n      if (switchState === \"on\") {\n        setSwitchState(\"off\");\n        props.sendSwitchState(props.switchId, 'off');\n      } else {\n        setSwitchState(\"on\");\n        props.sendSwitchState(props.switchId, 'on');\n        props.showAnim(props.switchId);\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, props.emoji)))));\n}\n\nfunction Sun(props) {\n  const size = props.status;\n  return React.createElement(\"div\", {\n    className: 'sun ' + size,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"sun small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }));\n}\n\nfunction Win(props) {\n  let showHide = 'hide';\n\n  if (props.screen == 'win') {\n    showHide = 'show';\n  } else {\n    showHide = 'hide';\n  }\n\n  return React.createElement(\"div\", {\n    className: 'win-' + showHide,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"win-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Good Morning!\")), React.createElement(\"button\", {\n    onClick: props.winOnClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Start\")));\n}\n\nfunction List(props) {\n  // const items = [\"💩\", \"👖\", \"👕\", \"😬\", \"👟\", \"🧥\"];\n  const items = [\"💩\", \"👖\", \"👕\"];\n\n  const _useState3 = useState(Array(items.length).fill('off')),\n        _useState4 = _slicedToArray(_useState3, 2),\n        switchsState = _useState4[0],\n        setSwitchState = _useState4[1];\n\n  const _useState5 = useState(['off', '❤️']),\n        _useState6 = _slicedToArray(_useState5, 2),\n        successOnOff = _useState6[0],\n        setSuccessOnOff = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        runAmin = _useState8[0],\n        setRunAnim = _useState8[1];\n\n  const _useState9 = useState('game'),\n        _useState10 = _slicedToArray(_useState9, 2),\n        screen = _useState10[0],\n        setScreen = _useState10[1];\n\n  const _useState11 = useState('reg'),\n        _useState12 = _slicedToArray(_useState11, 2),\n        size = _useState12[0],\n        setSize = _useState12[1];\n\n  const _useState13 = useState('show'),\n        _useState14 = _slicedToArray(_useState13, 2),\n        listHide = _useState14[0],\n        setListHide = _useState14[1]; // Setting the background acourding to the switches\n\n\n  const ons = switchsState.map(x => x == 'on');\n  const background = (ons.filter(Boolean).length / items.length * 100).toFixed(1);\n  const bgStyle = {\n    'background-image': 'linear-gradient(135deg, #5bb0ff 0%, #0070fb ' + background + '%)'\n  }; // On switch change\n\n  const sendSwitchState = (i, val) => {\n    // pass the value from the switch to the list\n    const switchs = switchsState.slice();\n    switchs[i] = val;\n    setSwitchState(switchs); // Switch to \"Win\" mode when all switchs are On\n\n    if (ons.filter(Boolean).length == items.length - 1) {\n      setTimeout(() => {\n        setScreen('win');\n        setSize('sun-win');\n      }, 1000);\n      setTimeout(() => {\n        setListHide('list-hide');\n      }, 1000);\n    }\n\n    ;\n  };\n\n  const showAnim = i => {\n    setSuccessOnOff(['on', items[i]]);\n    setTimeout(() => {\n      setRunAnim('run-anim');\n    }, 10);\n    setTimeout(() => {\n      setSuccessOnOff(['off', items[i]]);\n      setRunAnim('');\n    }, 3000);\n  };\n\n  const winOnClick = () => {\n    setScreen('game');\n    setListHide('show');\n    console.log('Click ' + screen);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"list-container\",\n    style: bgStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(Win, {\n    winOnClick: winOnClick,\n    winHide: screen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"list \" + listHide,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(Success, {\n    class: 'success-' + successOnOff[0],\n    emoji: successOnOff[1],\n    runAmin: runAmin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), items.map((item, i) => React.createElement(Toggle, {\n    emoji: item,\n    onOff: switchsState[i],\n    sendSwitchState: sendSwitchState,\n    switchId: i,\n    showAnim: showAnim,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }))), React.createElement(Sun, {\n    status: size,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }));\n}\n\nfunction App(props) {\n  return React.createElement(\"div\", {\n    className: \"app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }));\n}\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 160\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/dor_p/morning/morning_drill/src/index.js"],"names":["React","useState","ReactDOM","timeout","Success","props","spans","numSpans","console","log","emoji","i","push","runAmin","class","Toggle","onOff","switchState","setSwitchState","sendSwitchState","switchId","showAnim","Sun","size","status","Win","showHide","screen","winOnClick","List","items","Array","length","fill","switchsState","successOnOff","setSuccessOnOff","setRunAnim","setScreen","setSize","listHide","setListHide","ons","map","x","background","filter","Boolean","toFixed","bgStyle","val","switchs","slice","setTimeout","item","App","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { timeout } from \"q\";\n\nfunction Success(props) {\n\n  let spans = []\n  const numSpans = 10;\n  console.log(props.emoji)\n\n  for (var i = 0; i < numSpans; i++) {\n    spans.push(<span className={'single-success ' + 'anim-num-' + i + ' ' + props.runAmin}>{props.emoji}</span>);\n  }\n\n  return(\n    <div className = {'success ' + props.class}>\n      <div className = 'success-wrapper'>\n          {spans}\n      </div>\n    </div>\n  )\n}\n\nfunction Toggle(props) {\n\n  const [switchState, setSwitchState] = useState(props.onOff)\n  \n  return (\n    <div>\n      <div className=\"switch-wrapper\">\n        <div className={\"switch switch-\" + switchState}>\n          <div className={\"circle \" + switchState}>\n            <button\n              className={switchState + ' noselect'}\n              onClick={() => {\n                if (switchState === \"on\") {\n                  setSwitchState(\"off\");\n                  props.sendSwitchState(props.switchId, 'off')\n                }\n                else {\n                  setSwitchState(\"on\");\n                  props.sendSwitchState(props.switchId, 'on')\n                  props.showAnim(props.switchId)\n                }\n              }}\n            >\n              {props.emoji}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction Sun(props){\n  const size = props.status\n  return (\n    <div className={'sun ' + size} >\n      <div className='sun small'></div>\n    </div>\n  )\n}\n\nfunction Win(props) {\n\n  let showHide = 'hide'\n  if(props.screen == 'win'){showHide = 'show' } else {showHide = 'hide'}\n\n  return(\n    <div className={'win-' + showHide }>\n      <div className = 'win-content'>\n        <div className ='title'>\n          <h1>Good Morning!</h1>\n        </div>\n        <button onClick = {props.winOnClick}>Start</button>\n      </div>\n    </div>\n  )\n}\n\nfunction List(props) {\n\n  // const items = [\"💩\", \"👖\", \"👕\", \"😬\", \"👟\", \"🧥\"];\n  const items = [\"💩\", \"👖\", \"👕\"];\n\n  const [switchsState, setSwitchState] = useState(Array(items.length).fill('off'))\n  const [successOnOff, setSuccessOnOff] = useState(['off','❤️']);\n  const [runAmin, setRunAnim] = useState('') \n  const [screen, setScreen] = useState('game')\n  const [size, setSize] = useState('reg');\n  const [listHide, setListHide] = useState('show');\n\n// Setting the background acourding to the switches\n  const ons = switchsState.map(x =>(x == 'on'))\n  const background = (ons.filter(Boolean).length/items.length*100).toFixed(1)\n  const bgStyle = {\n    'background-image' : 'linear-gradient(135deg, #5bb0ff 0%, #0070fb ' + background +'%)'  \n  }\n\n// On switch change\n  const sendSwitchState = (i,val) => {\n    // pass the value from the switch to the list\n    const switchs = switchsState.slice();\n    switchs[i] = val;\n    setSwitchState(switchs)\n    // Switch to \"Win\" mode when all switchs are On\n    if(ons.filter(Boolean).length == (items.length-1)) {\n      setTimeout(() => {\n        setScreen('win')\n        setSize('sun-win')\n      },1000)\n      setTimeout(() => {\n        setListHide('list-hide')\n      },1000)\n    };\n  }\n\n  const showAnim = (i) => {\n    setSuccessOnOff(['on',items[i]])\n    setTimeout(() => {\n      setRunAnim('run-anim')\n    },10)\n    setTimeout(() => {\n      setSuccessOnOff(['off',items[i]])\n      setRunAnim('')\n    }, 3000);\n  }\n\n  const winOnClick = () => {\n    setScreen('game')\n    setListHide('show')\n    console.log( 'Click ' + screen)\n  }\n\n  return (\n    <div className='list-container' style ={bgStyle}>\n      <Win winOnClick={winOnClick} winHide={screen}/>\n      <div className={\"list \" + listHide }>\n        <Success class={'success-' + successOnOff[0]} emoji={successOnOff[1]} runAmin={runAmin}/>\n        {items.map((item,i) => (\n          <Toggle emoji={item} onOff ={switchsState[i]} sendSwitchState={sendSwitchState} switchId = {i} showAnim = {showAnim}/>\n        ))}\n      </div>\n      <Sun status = {size}/>\n    </div>\n  );\n}\n\n\n\nfunction App(props) {\n  return (\n    <div className=\"app\">\n      <List />\n    </div>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}