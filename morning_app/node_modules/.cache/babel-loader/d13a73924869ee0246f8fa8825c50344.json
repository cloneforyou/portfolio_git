{"ast":null,"code":"import _slicedToArray from \"/Users/dor_p/morning/morning_drill/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/dor_p/morning/morning_drill/src/index.js\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { timeout } from \"q\";\n\nfunction Success(props) {\n  let spans = [];\n  const numSpans = 10;\n\n  for (var i = 0; i < numSpans; i++) {\n    spans.push(React.createElement(\"span\", {\n      className: 'single-success ' + 'anim-num-' + i + ' ' + props.runAmin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, props.emoji));\n  }\n\n  return React.createElement(\"div\", {\n    className: 'success ' + props.class,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"success-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, spans));\n}\n\nfunction Toggle(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"switch-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"switch switch-\" + props.onOff,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"circle \" + props.onOff,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: props.onOff + ' noselect',\n    onClick: () => {\n      if (props.onOff === \"on\") {\n        props.sendSwitchState(props.switchId, 'off');\n      } else {\n        props.sendSwitchState(props.switchId, 'on');\n        props.showAnim(props.switchId);\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, props.emoji)))));\n}\n\nfunction Sun(props) {\n  const size = props.status;\n  return React.createElement(\"div\", {\n    className: 'sun ' + size,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"sun small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }));\n}\n\nfunction Win(props) {\n  let showHide = '';\n\n  if (props.winHide == 'win') {\n    showHide = 'show';\n  } else {\n    showHide = 'hide';\n  }\n\n  return React.createElement(\"div\", {\n    className: 'win win-' + showHide,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"win-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"main-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"\\uD83D\\uDC13\"), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Good Morning!\")), React.createElement(\"button\", {\n    onClick: props.winOnClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Start\")));\n}\n\nfunction List(props) {\n  // const items = [\"💩\", \"👖\", \"👕\", \"😬\", \"👟\", \"🧥\"];\n  const items = [\"💩\", \"👖\", \"👕\"];\n\n  const _useState = useState(Array(items.length).fill('off')),\n        _useState2 = _slicedToArray(_useState, 2),\n        switchsState = _useState2[0],\n        setSwitchState = _useState2[1];\n\n  const _useState3 = useState(['off', '❤️']),\n        _useState4 = _slicedToArray(_useState3, 2),\n        successOnOff = _useState4[0],\n        setSuccessOnOff = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        runAmin = _useState6[0],\n        setRunAnim = _useState6[1];\n\n  const _useState7 = useState('win'),\n        _useState8 = _slicedToArray(_useState7, 2),\n        screen = _useState8[0],\n        setScreen = _useState8[1];\n\n  const _useState9 = useState('sun-win'),\n        _useState10 = _slicedToArray(_useState9, 2),\n        size = _useState10[0],\n        setSize = _useState10[1];\n\n  const _useState11 = useState('list-hide'),\n        _useState12 = _slicedToArray(_useState11, 2),\n        listHide = _useState12[0],\n        setListHide = _useState12[1]; // Setting the background acourding to the switches\n\n\n  const ons = switchsState.map(x => x == 'on');\n  const background = (ons.filter(Boolean).length / items.length * 100).toFixed(1);\n  const bgStyle = {\n    'background-image': 'linear-gradient(135deg, #5bb0ff 0%, #0070fb ' + background + '%)'\n  }; // On switch change\n\n  const sendSwitchState = (i, val) => {\n    // pass the value from the switch to the list\n    const switchs = switchsState.slice();\n    switchs[i] = val;\n    setSwitchState(switchs);\n    console.log('switchsState is ' + switchsState); // Switch to \"Win\" mode when all switchs are On\n\n    if (ons.filter(Boolean).length == items.length - 1) {\n      setTimeout(() => {\n        setScreen('win');\n        setSize('sun-win');\n      }, 900);\n      setTimeout(() => {\n        setListHide('list-hide');\n      }, 1000);\n    }\n\n    ;\n  };\n\n  const showAnim = i => {\n    setSuccessOnOff(['on', items[i]]);\n    setTimeout(() => {\n      setRunAnim('run-anim');\n    }, 10);\n    setTimeout(() => {\n      setSuccessOnOff(['off', items[i]]);\n      setRunAnim('');\n    }, 3000);\n  };\n\n  const winOnClick = () => {\n    setScreen('game');\n    setListHide('show');\n    setSize('sun');\n    setSwitchState(Array(items.length).fill('off'));\n    console.log('switchsState is ' + switchsState);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"list-container\",\n    style: bgStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(Win, {\n    winOnClick: winOnClick,\n    winHide: screen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"list \" + listHide,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(Success, {\n    class: 'success-' + successOnOff[0],\n    emoji: successOnOff[1],\n    runAmin: runAmin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }), items.map((item, i) => React.createElement(Toggle, {\n    emoji: item,\n    onOff: switchsState[i],\n    sendSwitchState: sendSwitchState,\n    switchId: i,\n    showAnim: showAnim,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }))), React.createElement(Sun, {\n    status: size,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }));\n}\n\nfunction App(props) {\n  return React.createElement(\"div\", {\n    className: \"app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }));\n}\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 160\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/dor_p/morning/morning_drill/src/index.js"],"names":["React","useState","ReactDOM","timeout","Success","props","spans","numSpans","i","push","runAmin","emoji","class","Toggle","onOff","sendSwitchState","switchId","showAnim","Sun","size","status","Win","showHide","winHide","winOnClick","List","items","Array","length","fill","switchsState","setSwitchState","successOnOff","setSuccessOnOff","setRunAnim","screen","setScreen","setSize","listHide","setListHide","ons","map","x","background","filter","Boolean","toFixed","bgStyle","val","switchs","slice","console","log","setTimeout","item","App","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { timeout } from \"q\";\n\nfunction Success(props) {\n\n  let spans = []\n  const numSpans = 10;\n\n  for (var i = 0; i < numSpans; i++) {\n    spans.push(<span className={'single-success ' + 'anim-num-' + i + ' ' + props.runAmin}>{props.emoji}</span>);\n  }\n\n  return(\n    <div className = {'success ' + props.class}>\n      <div className = 'success-wrapper'>\n          {spans}\n      </div>\n    </div>\n  )\n}\n\nfunction Toggle(props) {\n\n  return (\n    <div>\n      <div className=\"switch-wrapper\">\n        <div className={\"switch switch-\" + props.onOff}>\n          <div className={\"circle \" + props.onOff}>\n            <button\n              className={props.onOff + ' noselect'}\n              onClick={() => {\n                if (props.onOff === \"on\") {\n                  props.sendSwitchState(props.switchId, 'off')\n                }\n                else {\n                  props.sendSwitchState(props.switchId, 'on')\n                  props.showAnim(props.switchId)\n                }\n              }}\n            >\n              {props.emoji}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction Sun(props){\n  const size = props.status\n  return (\n    <div className={'sun ' + size} >\n      <div className='sun small'></div>\n    </div>\n  )\n}\n\nfunction Win(props) {\n\n  let showHide = ''\n  if(props.winHide == 'win'){showHide = 'show' } else {showHide = 'hide'}\n\n  return(\n    <div className={'win win-' + showHide }>\n      <div className = 'win-content'>\n        <div className ='title'>\n          <h1 className='main-icon'>🐓</h1>\n          <h1>Good Morning!</h1>\n        </div>\n        <button onClick = {props.winOnClick}>Start</button>\n      </div>\n    </div>\n  )\n}\n\nfunction List(props) {\n\n  // const items = [\"💩\", \"👖\", \"👕\", \"😬\", \"👟\", \"🧥\"];\n  const items = [\"💩\", \"👖\", \"👕\"];\n\n  const [switchsState, setSwitchState] = useState(Array(items.length).fill('off'))\n  const [successOnOff, setSuccessOnOff] = useState(['off','❤️']);\n  const [runAmin, setRunAnim] = useState('') \n  const [screen, setScreen] = useState('win')\n  const [size, setSize] = useState('sun-win');\n  const [listHide, setListHide] = useState('list-hide');\n\n// Setting the background acourding to the switches\n  const ons = switchsState.map(x =>(x == 'on'))\n  const background = (ons.filter(Boolean).length/items.length*100).toFixed(1)\n  const bgStyle = {\n    'background-image' : 'linear-gradient(135deg, #5bb0ff 0%, #0070fb ' + background +'%)'  \n  }\n\n// On switch change\n  const sendSwitchState = (i,val) => {\n    // pass the value from the switch to the list\n    const switchs = switchsState.slice();\n    switchs[i] = val;\n    setSwitchState(switchs)\n    console.log('switchsState is ' + switchsState)\n\n    // Switch to \"Win\" mode when all switchs are On\n    if(ons.filter(Boolean).length == (items.length-1)) {\n\n      setTimeout(() => {\n        setScreen('win')\n        setSize('sun-win')\n      },900)\n      \n      setTimeout(() => {\n        setListHide('list-hide')\n      },1000)\n    };\n  }\n\n  const showAnim = (i) => {\n    setSuccessOnOff(['on',items[i]])\n    setTimeout(() => {\n      setRunAnim('run-anim')\n    },10)\n    setTimeout(() => {\n      setSuccessOnOff(['off',items[i]])\n      setRunAnim('')\n    }, 3000);\n  }\n\n  const winOnClick = () => {\n    setScreen('game')\n    setListHide('show')\n    setSize('sun')\n    setSwitchState(Array(items.length).fill('off'))\n    console.log('switchsState is ' + switchsState)\n  }\n\n  return (\n    <div className='list-container' style ={bgStyle}>\n      <Win winOnClick={winOnClick} winHide={screen}/>\n      <div className={\"list \" + listHide }>\n        <Success class={'success-' + successOnOff[0]} emoji={successOnOff[1]} runAmin={runAmin}/>\n        {items.map((item,i) => (\n          <Toggle emoji={item} onOff={switchsState[i]} sendSwitchState={sendSwitchState} switchId={i} showAnim={showAnim}/>\n        ))}\n      </div>\n      <Sun status = {size}/>\n    </div>\n  );\n}\n\nfunction App(props) {\n  return (\n    <div className=\"app\">\n      <List />\n    </div>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}